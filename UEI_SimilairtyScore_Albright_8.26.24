import requests
import pandas as pd
import logging

# Set up logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Read the CSV file
df = pd.read_csv('SpendingUEIsample.csv')
total_companies = len(df)
logger.info(f'Loaded CSV file with {total_companies} companies')

def get_recipient_info(company_name):
    url = "https://api.usaspending.gov/api/v2/autocomplete/recipient/"
    data = {"search_text": company_name, "limit": 150}
    try:
        response = requests.post(url, json=data)
        response.raise_for_status()
        results = response.json().get("results", [])
        return [
            {"Search Term": company_name, "Parent Name": r["recipient_name"], "UEI": r["uei"]}
            for r in results if r["uei"] and r["recipient_level"] == "P"
        ]
    except requests.exceptions.RequestException as e:
        logger.error(f'Error getting recipient info for {company_name}: {e}')
        return []

# Get Parent UEIs for each company
recipient_info_list = []

# Process each company with a counter
for index, row in df.iterrows():
    print(f"Processing Company {index + 1} out of {total_companies}...")
    recipient_info = get_recipient_info(row["Company Name"])
    recipient_info_list.extend(recipient_info)
    print(f"Company {index + 1} complete.")

logger.info('Finished processing companies')

# Create a dataframe from the recipient info list
parent_ueis_df = pd.DataFrame(recipient_info_list)
logger.info('Created parent_ueis_df dataframe')

# Save the dataframe to a CSV file
parent_ueis_df.to_csv('usaspending_parent_ueis_output_v0.csv', index=False)



!pip install fuzzywuzzy python-Levenshtein



from fuzzywuzzy import process

# Load the data
df = pd.read_csv('usaspending_parent_ueis_output_v0.csv')

# Define a function to extract the main company name
def extract_main_company_name(name):
    parts = name.split()
    main_name =''.join(parts[:2])  # Take the first two words as the main company name
    return main_name

# Apply the function to the 'Parent Name' column
df['Main Parent Name'] = df['Parent Name'].apply(extract_main_company_name)

# Use fuzzywuzzy to match the 'Search Term' with the 'Main Parent Name'
df['Match Score'] = df.apply(lambda row: process.extractOne(row['Search Term'], [row['Main Parent Name']])[1], axis=1)

# Print the resulting dataframe to a CSV file
df.to_csv('usaspending_parent_ueis_output_v0_with_match_score.csv', index=False)
